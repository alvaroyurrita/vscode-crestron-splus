{
  "scopeName": "source.splus",
  "fileTypes": [
    "usp",
    "usl",
    "csp",
    "csl"
  ],
  "name": "Crestron",
  "patterns": [
    {
      "include": "#crestron_keywords"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#string"
    },
    {
      "comment": "help text highlighting",
      "begin": "(?i)(#help_begin)",
      "beginCaptures": {
        "1": {
          "name": "keyword.other.preprocessor.usp"
        }
      },
      "end": "(?i)(#help_end)",
      "endCaptures": {
        "1": {
          "name": "keyword.other.preprocessor.usp"
        }
      },
      "name": "comment.block.usp"
    },
    {
      "match": "(?i)\\s*(push|change|release)\\s+(([\\w_$]+\\s*,?\\s*)+)",
      "captures": {
        "1": {
          "name": "keyword.control.usp"
        },
        "2": {
          "name": "entity.name.function.usp"
        }
      },
      "comment": "named event name highlighting",
      "name": "meta.function.usp",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#parens"
        }
      ]
    },
    {
      "match": "(?i)\\b(event)\\b",
      "captures": {
        "1": {
          "name": "keyword.control.usp"
        }
      },
      "comment": "generic event name highlighting",
      "name": "meta.function.usp",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#parens"
        }
      ]
    },
    {
      "begin": "(?i)(function|integer_function|signed_integer_function|long_integer_function|signed_long_integer_function|string_function|callback\nfunction|callback integer_function|callback signed_integer_function|callback long_integer_function|callback\nsigned_long_integer_function|callback gathereventhandler|eventhandler)\\s+([\\w_]*)",
      "beginCaptures": {
        "1": {
          "name": "support.class.usp"
        },
        "2": {
          "name": "keyword.control.usp"
        },
        "3": {
          "name": "entity.name.function.usp"
        }
      },
      "comment": "function name highlighting",
      "end": "(\\()|({)|(?<=\\})|(?=#)|(;)",
      "name": "meta.function.usp",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#parens"
        }
      ]
    },
    {
      "comment": "Function use highlighting",
      "match": "([\\w]*\\.)?([\\w]*)\\s*\\((.{0,})\\)",
      "captures": {
        "1": {
          "name": "support.class"
        },
        "2": {
          "name": "support.function.usp"
        },
        "3": {
          "name": "function.parameter.usp",
          "patterns": [
            {
              "include": "#string"
            }
          ]
        }
      }
    },
    {
      "comment": "Define Constants",
      "match": "(?i)(#define_constant)\\s+(\\w+)",
      "captures": {
        "1": {
          "name": "keyword.other.preprocessor.usp"
        },
        "2": {
          "name": "variable.other.usp"
        }
      }
    },
    {
      "begin": "(?i)\\b(digital_input|analog_input|analog_output|buffer_input|digital_output|string_input|string_output)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.other.preprocessor.usp"
        }
      },
      "end": "(;)",
      "endCaptures": {
        "1": {
          "name": "punctuation.terminator.statement.usp"
        }
      },
      "name": "entity.name.function.usp",
      "patterns": [
        {
          "include": "#crestron_keywords"
        },
        {
          "include": "#comments"
        },
        {
          "include": "#punctuation-comma"
        }
      ]
    }
  ],
  "repository": {
    "string": {
      "patterns": [
        {
          "include": "#qstring-single"
        },
        {
          "include": "#qstring-double"
        }
      ]
    },
    "qstring-double": {
      "name": "string.quoted.double.usp",
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.usp"
        }
      },
      "end": "(\")|((?:[^\\\\\\n])$)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.string.end.usp"
        },
        "2": {
          "name": "invalid.illegal.newline.usp"
        }
      },
      "patterns": [
        {
          "include": "#string-character-escape"
        }
      ]
    },
    "qstring-single": {
      "name": "string.quoted.single.usp",
      "begin": "'",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.usp"
        }
      },
      "end": "(')|(?<!\\\\)(?=\\s*\\n)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.string.end.usp"
        },
        "2": {
          "name": "invalid.illegal.newline.usp"
        }
      },
      "patterns": [
        {
          "include": "#string-character-escape"
        }
      ]
    },
    "string-character-escape": {
      "name": "constant.character.escape.usp",
      "match": "\\\\(?:[abefnrtv'\"\\\\]|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|[0-1]\\d{2}|25[0-5]|2[0-4][0-9]|$)|%(?:(?:\\d+)?(?:\\.\\d+)?)?(?:d|i|f|s|u|hi|hu|ld|li|lu)|%(?:\\d+)?[xX]|%[%cno]"
    },
    "comments": {
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "comment"
            }
          },
          "match": "^/\\* =(\\s*.*?)\\s*= \\*/$\\n?",
          "name": "comment.block.usp"
        },
        {
          "begin": "/\\*",
          "captures": {
            "1": {
              "name": "comment"
            }
          },
          "end": "\\*/",
          "name": "comment.block"
        },
        {
          "match": "\\*/.*\\n",
          "name": "comment"
        },
        {
          "captures": {
            "1": {
              "name": "comment"
            }
          },
          "match": "^// =(\\s*.*?)\\s*=\\s*$\\n?",
          "name": "comment.line"
        },
        {
          "begin": "//",
          "beginCaptures": {
            "1": {
              "name": "comment"
            }
          },
          "end": "(?=$)",
          "name": "comment.line.double-slash"
        }
      ]
    },
    "crestron_keywords": {
      "patterns": [
        {
          "comment": "Crestron Compiler Directives",
          "match": "(?i)(#\\b(symbol_name|large_stack|print_to_trace|max_internal_buffer_size|digital_expand|analog_serial_expand|output_shift|category|user_library|crestron_library|user_simplsharp_library|crestron_simplsharp_library|includepath|default_volatile|default_nonvolatile|enable_trace|enable_dynamic|enable_stack_checking|encoding_ascii|encoding_utf16|encoding_inherit_from_parent|encoding_inherit_from_program|help|help_pdf_file|hint|if_defined|if_not_defined|endif|if_series2|if_series3|if_series4)\\b)",
          "name": "keyword.other.preprocessor.usp"
        },
        {
          "comment": "Crestron Parameter Properties",
          "match": "(?i)(#\\b(begin_parameter_properties|end_parameter_properties|begin_prop_full_description|end_prop_full_description|begin_prop_notes|end_prop_notes)\\b)",
          "name": "keyword.other.preprocessor.usp"
        },
        {
          "comment": "Crestron Joins",
          "match": "(?i)(#\\b(analog_input_join|analog_output_join|digital_input_join|digital_output_join|string_input_join|string_output_join)\\b)",
          "name": "keyword.other.preprocessor.usp"
        },
        {
          "comment": "Crestron I/O Declarations",
          "match": "(?i)\\b(integer_parameter|long_integer_parameter|volatile|nonvolatile|signed_integer_parameter|signed_long_integer_parameter|string_parameter|structure)\\b",
          "name": "keyword.other.preprocessor.usp"
        },
        {
          "comment": "Crestron Socket Declarations",
          "match": "(?i)\\b(tcp_client|tcp_server|udp_socket)\\b",
          "name": "keyword.other.preprocessor.usp"
        },
        {
          "comment": "Crestron Variable Types",
          "match": "(?i)\\b(integer|long_integer|signed_integer|signed_long_integer|string|structure|cmutex)\\b",
          "name": "storage.type.usp"
        },
        {
          "comment": "Crestron Threadsafe",
          "match": "(?i)\\b(threadsafe)\\b",
          "name": "storage.type.usp"
        },
        {
          "comment": "Crestron Skip Type",
          "match": "(?i)\\b(_skip_)\\b",
          "name": "storage.type.skip.usp"
        },
        {
          "comment": "Crestron Boolean Types",
          "match": "(?i)\\b(true|false)\\b",
          "name": "constant.language.boolean.usp"
        },
        {
          "comment": "Crestron Statements",
          "match": "(?i)\\b(return|case|default)\\b",
          "name": "keyword.control.usp"
        },
        {
          "comment": "Crestron Exceptions",
          "match": "(?i)\\b(try|catch)\\b",
          "name": "keyword.control.usp"
        },
        {
          "comment": "Crestron Exception Functions",
          "match": "(?i)\\b(GetExceptionCode|GetExceptionMessage)\\b",
          "name": "support.function.usp"
        },
        {
          "comment": "Crestron Conditionals",
          "match": "(?i)\\b(break|continue|switch|cswitch|if|else|do|until|for|while)\\b",
          "name": "keyword.control.usp"
        },
        {
          "comment": "Crestron Array Functions",
          "match": "(?i)\\b(GetLastModifiedArrayIndex|GetNumArrayCols|GetNumArrayRows|GetNumStructureArrayCols|ResizeArray|ResizeStructureArray|SetArray)\\b",
          "name": "support.function.usp"
        },
        {
          "comment": "Crestron Bit/Byte Functions",
          "match": "(?i)\\b(Bit|Byte|High|HighWord|Low|LowWord|LowerChar|RotateLeft|RotateLeftLong|RotateRight|RotateRightLong|SetByte|UpperChar)\\b",
          "name": "support.function.usp"
        },
        {
          "comment": "Crestron CEN-OEM Functions",
          "match": "(?i)\\b(_oem_break|_oem_cd|_oem_cts|_oem_dtr|_oem_long_break|_oem_max_string|_oem_pacing|_oem_rts|_oem_str_in|_oem_str_out)\\b",
          "name": "support.function.cen-oem.usp"
        },
        {
          "comment": "Crestron Data Conversion Functions",
          "match": "(?i)\\b(Atoi|Atosi|Atol|Atosl|Chr|HexToI|HexToL|HexToSI|HexToSL|Itoa|Itohex|Ltoa|Ltohex)\\b",
          "name": "support.function.usp"
        },
        {
          "comment": "Crestron Socket Access Functions",
          "match": "(?i)\\b(SocketConnect|SocketConnectClient|SocketDisconnect|SocketDisconnectClient|SocketGetAddressAsRequested|SocketGetPortNumber|SocketGetRemoteIPAddress|SocketGetSenderIPAddress|SocketGetStatus|SocketIsBroadcast|SocketIsMulticast|SocketReceive|SocketSend|SocketServerStartListen|SocketServerStopListen|SocketStatus|SocketUDP_Disable|SocketUDP_Enable)\\b",
          "name": "support.function.usp"
        },
        {
          "comment": "Crestron Email Functions",
          "match": "(?i)\\b(SendMail|SendMailAdvance|SendMailWithAttachments)\\b",
          "name": "support.function.usp"
        },
        {
          "comment": "Crestron Encoding Functions",
          "match": "(?i)\\b(GetEncoding|SetEncoding|Inherit|Ascii|ToAscii|Utf16|ToUtf16)\\b",
          "name": "support.function.usp"
        },
        {
          "comment": "Crestron File Functions",
          "match": "(?i)\\b(FILE_INFO|FileBOF|FileClose|FileDelete|FileDeleteShared|FileEOF|FileLength|FileOpen|FileOpenShared|FileRead|FileSeek|FileWrite|FindClose|FindFirst|FindFirstShared|FindNext|GetCurrentDirectory|IsDirectory|IsHidden|IsReadOnly|IsSystem|IsVolume|MakeDirectory|MakeDirectoryShared|ReadInteger|ReadIntegerArray|ReadLongInteger|ReadLongIntegerArray|ReadSignedInteger|ReadSignedIntegerArray|ReadSignedLongInteger|ReadSignedLongIntegerArray|ReadString|ReadStringArray|ReadStructure|RemoveDirectory|RemoveDirectoryShared|SetCurrentDirectory|StartFileOperations|WaitForNewDisk|WriteInteger|WriteIntegerArray|WriteLongInteger|WriteLongIntegerArray|WriteSignedInteger|WriteSignedIntegerArray|WriteSignedLongInteger|WriteSignedLongIntegerArray|WriteString|WriteStringArray|WriteStructure)\\b",
          "name": "support.function.usp"
        },
        {
          "comment": "Crestron Math Functions",
          "match": "(?i)\\b(abs|max|min|muldiv|smax|smin)\\b",
          "name": "support.function.usp"
        },
        {
          "comment": "Crestron Ramp Functions",
          "match": "(?i)\\b(CompareRampsByAttribute|CompareRampsByID|CreateRamp|GetRampInfo|InitializeRampInfo|InitializeRampInfoArray|IsRamping|RAMP_INFO|StopRamp)\\b",
          "name": "support.function.usp"
        },
        {
          "comment": "Crestron Random Number Functions",
          "match": "(?i)\\b(Random|Rnd|Seed)\\b",
          "name": "support.function.usp"
        },
        {
          "comment": "Crestron String Functions",
          "match": "(?i)\\b(Makestring|Print|Trace|ClearBuffer|CompareStrings|CompareStringsNoCase|Find|FindNoCase|Gather|GatherByLength|GatherAsync|GatherAsyncByLength|ReArmGatherAsync|RemoveGatherAsync|GetC|Left|Len|Lower|Upper|Mid|Remove|RemoveByLength|ResizeString|ReverseFind|ReverseFindNoCase|Right|SetString)\\b",
          "name": "support.function.usp"
        },
        {
          "comment": "Crestron System Control Functions",
          "match": "(?i)\\b(delay|ProcessLogic|pulse|TerminateEvent|WaitForInitializationComplete)\\b",
          "name": "support.function.usp"
        },
        {
          "comment": "Crestron System Initialization Functions",
          "match": "(?i)\\b(GenerateUserError|GenerateUserNotice|GenerateUserWarning|GetCIP|GetCrestnet|GetModelNumber|GetProgramNumber|GetSeries|GetSlot|GetSymbolInstanceName|GetSymbolReferenceName|IsSignalDefined|MakeProgramFilename|SendCresnetPacket|SendPacketToCPU|SetCIP|SetCresnet|SetSlot|RegisterDelegate|RegisterEvent)\\b",
          "name": "support.function.usp"
        },
        {
          "comment": "Crestron Time/Date Functions",
          "match": "(?i)\\b(Date|Day|FileDate|FileDay|FileGetDateNum|FileGetDayOfWeekNum|FileGetHourNum|FileGetMinutesNum|FileGetMonthNum|FileGetSecondsNum|FileGetYearNum|FileMonth|FileTime|GetDateNum|GetDayOfWeekNum|GetDST|GetGMTOffset|GetHourNum|GetHSeconds|GetMinutesNum|GetMonthNum|GetSecondsNum|GetTicks|GetYearNum|month|SetClock|SetDate|SetGMTOffset|Time)\\b",
          "name": "support.function.usp"
        },
        {
          "comment": "Crestron Wait Functions",
          "match": "(?i)\\b(CancelAllWait|CancelWait|PauseAllWait|PauseWait|ResumeAllWait|ResumeWait|RetimeWait|Wait)\\b",
          "name": "support.function.wait.usp"
        }
      ]
    },
    "parens": {
      "begin": "\\(",
      "end": "\\)",
      "name": "meta.parens.usp",
      "patterns": [
        {
          "include": "$base"
        }
      ]
    },
    "numbers": {
      "match": "\\b((0x[a-fA-F0-9]{1,8})|([0-9]+))\\b",
      "name": "constant.numeric.usp"
    },
    "punctuation-comma": {
      "match": ",",
      "name": "punctuation.separator.comma.usp"
    },
    "punctuation-semicolon": {
      "match": ";",
      "name": "punctuation.terminator.statement.usp"
    }
  }
}