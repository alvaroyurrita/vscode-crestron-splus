import { provideClassTokens } from "../../helpers/apiParser.temp";
import * as vscode from 'vscode';
import * as assert from 'assert';

suite("With api Parser", function () {

    test("get classes and tokens", async () => {
        const workSpaceDir = vscode.workspace.workspaceFolders?.[0].uri.fsPath;
        const apiFile = workSpaceDir + "\\apiParserTestFile.api";

        const apiMembers = await provideClassTokens(apiFile);
        await vscode.commands.executeCommand('workbench.action.closeAllEditors');

        assert.strictEqual(apiMembers.length, 2);
        assert.strictEqual(apiMembers[0].name, "SampleClass");
        assert.strictEqual(apiMembers[0].kind, vscode.CompletionItemKind.Class);
        assert.strictEqual(apiMembers[0].dataType, "class");
        assert.strictEqual(apiMembers[0].nameRange.start.line, 3);
        assert.strictEqual(apiMembers[0].nameRange.start.character, 11);
        assert.strictEqual(apiMembers[0].nameRange.end.line, 3);
        assert.strictEqual(apiMembers[0].nameRange.end.character, 22);


        assert.strictEqual(apiMembers[0].internalDelegates.length, 1);
        assert.strictEqual(apiMembers[0].internalDelegates[0].name, "IntSampleDelegate");
        assert.strictEqual(apiMembers[0].internalDelegates[0].kind, vscode.CompletionItemKind.Method);
        assert.strictEqual(apiMembers[0].internalDelegates[0].dataType, "SIGNED_LONG_INTEGER_FUNCTION");
        assert.strictEqual(apiMembers[0].internalDelegates[0].nameRange.start.line, 6);
        assert.strictEqual(apiMembers[0].internalDelegates[0].nameRange.start.character, 46);
        assert.strictEqual(apiMembers[0].internalDelegates[0].nameRange.end.line, 6);
        assert.strictEqual(apiMembers[0].internalDelegates[0].nameRange.end.character, 63);
        assert.strictEqual(apiMembers[0].internalDelegates[0].parameters.length, 2);
        assert.strictEqual(apiMembers[0].internalDelegates[0].parameters.length, 2);
        assert.strictEqual(apiMembers[0].internalDelegates[0].parameters[0].name, "intParameter");
        assert.strictEqual(apiMembers[0].internalDelegates[0].parameters[0].kind, vscode.CompletionItemKind.Variable);
        assert.strictEqual(apiMembers[0].internalDelegates[0].parameters[0].dataType, "SIGNED_LONG_INTEGER");
        assert.strictEqual(apiMembers[0].internalDelegates[0].parameters[0].nameRange.start.line, 6);
        assert.strictEqual(apiMembers[0].internalDelegates[0].parameters[0].nameRange.start.character, 86);
        assert.strictEqual(apiMembers[0].internalDelegates[0].parameters[0].nameRange.end.line, 6);
        assert.strictEqual(apiMembers[0].internalDelegates[0].parameters[0].nameRange.end.character, 98);
        assert.strictEqual(apiMembers[0].internalDelegates[0].parameters[1].name, "uShortIntegerParameter");
        assert.strictEqual(apiMembers[0].internalDelegates[0].parameters[1].kind, vscode.CompletionItemKind.Variable);
        assert.strictEqual(apiMembers[0].internalDelegates[0].parameters[1].dataType, "INTEGER");

        assert.strictEqual(apiMembers[0].internalEvents.length, 1);
        assert.strictEqual(apiMembers[0].internalEvents[0].name, "SampleComplexEvent");
        assert.strictEqual(apiMembers[0].internalEvents[0].kind, vscode.CompletionItemKind.Event);
        assert.strictEqual(apiMembers[0].internalEvents[0].dataType, "EventHandler");
        assert.strictEqual(apiMembers[0].internalEvents[0].nameRange.start.line, 9);
        assert.strictEqual(apiMembers[0].internalEvents[0].nameRange.start.character, 21);
        assert.strictEqual(apiMembers[0].internalEvents[0].nameRange.end.line, 9);
        assert.strictEqual(apiMembers[0].internalEvents[0].nameRange.end.character, 39);
        assert.strictEqual(apiMembers[0].internalEvents[0].parameters.length, 2);
        assert.strictEqual(apiMembers[0].internalEvents[0].parameters[0].name, "sender");
        assert.strictEqual(apiMembers[0].internalEvents[0].parameters[0].kind, vscode.CompletionItemKind.Variable);
        assert.strictEqual(apiMembers[0].internalEvents[0].parameters[0].dataType, "SampleClass");
        assert.strictEqual(apiMembers[0].internalEvents[0].parameters[0].nameRange.start.line, 9);
        assert.strictEqual(apiMembers[0].internalEvents[0].parameters[0].nameRange.start.character, 54);
        assert.strictEqual(apiMembers[0].internalEvents[0].parameters[0].nameRange.end.line, 9);
        assert.strictEqual(apiMembers[0].internalEvents[0].parameters[0].nameRange.end.character, 60);
        assert.strictEqual(apiMembers[0].internalEvents[0].parameters[1].name, "e");
        assert.strictEqual(apiMembers[0].internalEvents[0].parameters[1].kind, vscode.CompletionItemKind.Variable);
        assert.strictEqual(apiMembers[0].internalEvents[0].parameters[1].dataType, "MyEventArgs");

        assert.strictEqual(apiMembers[0].internalFunctions.length, 1);
        assert.strictEqual(apiMembers[0].internalFunctions[0].dataType,"INTEGER_FUNCTION");
        assert.strictEqual(apiMembers[0].internalFunctions[0].name, "SampleUshortMethod");
        assert.strictEqual(apiMembers[0].internalFunctions[0].kind, vscode.CompletionItemKind.Function);
        assert.strictEqual(apiMembers[0].internalFunctions[0].nameRange.start.line, 12);
        assert.strictEqual(apiMembers[0].internalFunctions[0].nameRange.start.character, 25);
        assert.strictEqual(apiMembers[0].internalFunctions[0].nameRange.end.line, 12);
        assert.strictEqual(apiMembers[0].internalFunctions[0].nameRange.end.character, 43);
        assert.strictEqual(apiMembers[0].internalFunctions[0].parameters.length, 3);
        assert.strictEqual(apiMembers[0].internalFunctions[0].parameters[0].name, "ushortParameter");
        assert.strictEqual(apiMembers[0].internalFunctions[0].parameters[0].dataType, "INTEGER");
        assert.strictEqual(apiMembers[0].internalFunctions[0].parameters[0].kind, vscode.CompletionItemKind.Variable);

        assert.strictEqual(apiMembers[0].internalVariables.length, 1);
        assert.strictEqual(apiMembers[0].internalVariables[0].name, "stringSampleField");
        assert.strictEqual(apiMembers[0].internalVariables[0].kind, vscode.CompletionItemKind.Variable);
        assert.strictEqual(apiMembers[0].internalVariables[0].dataType, "STRING");
        assert.strictEqual(apiMembers[0].internalVariables[0].nameRange.start.line, 15);
        assert.strictEqual(apiMembers[0].internalVariables[0].nameRange.start.character, 15);
        assert.strictEqual(apiMembers[0].internalVariables[0].nameRange.end.line, 15);
        assert.strictEqual(apiMembers[0].internalVariables[0].nameRange.end.character, 32);

        assert.strictEqual(apiMembers[0].internalProperties.length, 1);
        assert.strictEqual(apiMembers[0].internalProperties[0].name, "SampleSampleSubClass");
        assert.strictEqual(apiMembers[0].internalProperties[0].kind, vscode.CompletionItemKind.Property);
        assert.strictEqual(apiMembers[0].internalProperties[0].dataType, "SampleSubClass");
        assert.strictEqual(apiMembers[0].internalProperties[0].nameRange.start.line, 19);
        assert.strictEqual(apiMembers[0].internalProperties[0].nameRange.start.character, 23);
        assert.strictEqual(apiMembers[0].internalProperties[0].nameRange.end.line, 19);
        assert.strictEqual(apiMembers[0].internalProperties[0].nameRange.end.character, 43);

        assert.strictEqual(apiMembers[0].internalDelegateProperties.length, 1);
        assert.strictEqual(apiMembers[0].internalDelegateProperties[0].name, "SampleDelegateProperty");
        assert.strictEqual(apiMembers[0].internalDelegateProperties[0].kind, vscode.CompletionItemKind.Property);
        assert.strictEqual(apiMembers[0].internalDelegateProperties[0].dataType, "SampleDelegate");
        assert.strictEqual(apiMembers[0].internalDelegateProperties[0].nameRange.start.line, 18);
        assert.strictEqual(apiMembers[0].internalDelegateProperties[0].nameRange.start.character, 40);
        assert.strictEqual(apiMembers[0].internalDelegateProperties[0].nameRange.end.line, 18);
        assert.strictEqual(apiMembers[0].internalDelegateProperties[0].nameRange.end.character, 62);


        assert.strictEqual(apiMembers[1].name, "MyEventArgs");
    });
});